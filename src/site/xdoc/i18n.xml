<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	This is free and unencumbered software released into the public domain.
	
	Anyone is free to copy, modify, publish, use, compile, sell, or
	distribute this software, either in source code form or as a compiled
	binary, for any purpose, commercial or non-commercial, and by any
	means.
	
	In jurisdictions that recognize copyright laws, the author or authors
	of this software dedicate any and all copyright interest in the
	software to the public domain. We make this dedication for the benefit
	of the public at large and to the detriment of our heirs and
	successors. We intend this dedication to be an overt act of
	relinquishment in perpetuity of all present and future rights to this
	software under copyright law.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
	OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
	ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
	OTHER DEALINGS IN THE SOFTWARE.
	
	For more information, please refer to <http://unlicense.org/>
 -->
<document>
	<properties>
		<title>Usage - i18n Helpers</title>
	</properties>
	<body>
		<section name="What/Why?">
			<dl>
				<dt>What is the motivation for these features?</dt>
				<dd>Developers should avoid hard-coding any copy type of text. 
					Even seasoned CQ developers occasionally end up using 
					ValueMap defaults as hard-coded values (e.g. 
					<b>&lt;%=properties.get("signUp", "Sign-Up")%&gt;</b>).
					This makes for a fragile solution in multi-lingual sites. 
					<a href="http://sling.apache.org/documentation/bundles/internationalization-support-i18n.html" target="_blank">sling internationalization support</a> 
					provides a great way to establish Locale specific copy as
					via ResourceBundles -- a common Java concept. Moreover, these
					messages can be managed as content on a running CQ instance 
					(<a href="http://localhost:4502/libs/cq/i18n/translator.html" target="_blank">http://host:port/libs/cq/i18n/translator.html</a>)
					which could prevent unnecessary patch deployments when 
					default copy is not authorable on a component. Overall, the
					design goal of these features are to establish a 
					development pattern and reduce necessary boilerplate.</dd>
				
				<dt>What does this provide that isn't out-of-box?</dt>
				<dd>&lt;cq:setContentBundle&gt; provides access to a large set 
				    of sling:MessageEntry values for a given Locale. Narrowing
				    to a sling:basename qualified set of sling:MessageEntry
				    key-value/message-pairs is easier to debug. Additionally,
				    checking the current resource/node for properties of the
				    same name provides a reasonable short circuit.</dd>
				
				<dt>What are some limitations?</dt>
				<dd>This pattern presumes defaults are shared across all
					instances of a common sling:resourceType (i.e. all
					instances of a particular component). The fallback
					mechanism must coerce String[] to single valued and
					this could look ugly/unexpected. Lastly, the current
					node property lookup does not support inheritance (i.e. 
					<a href="http://dev.day.com/docs/en/cq/current/javadoc/com/day/cq/commons/inherit/InheritanceValueMap.html" target="_blank">InheritanceValueMap#getInherited</a>).</dd>
					
				<dt>Where are the tests?</dt>
				<dd>Working on it...</dd>
			</dl>
		</section>
		<section name="&lt;isi:i18nHelper/&gt;">
			<a href="https://github.com/steeleforge/ironsites/wiki/Internationalization-(i18n)-Helpers">Usage</a>
		</section>
	</body>
</document>